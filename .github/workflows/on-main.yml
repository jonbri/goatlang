name: OnMain
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
jobs:
  OnMain:
    name: OnMain
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Golang
        run: ./bin/install-go.sh
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: 'https://registry.npmjs.org'
      - name: Check
        run: |
          yarn install && yarn test
          yarn test
          yarn start
          yarn start:go

      - name: Determine next version
        id: determine_next_version
        run: |
          if [[ `git log -1 --pretty=%B` == release* ]]; then
            echo "Detected release..."
            NEW_VERSION=`git show -s --format=%B HEAD | head -n 1 | awk -e '{ print $2 }'`
          else
            echo "Detected prerelease..."
            PREVIOUS_VERSION=`git describe --tags --abbrev=0`
            echo "PREVIOUS_VERSION: ${PREVIOUS_VERSION}"
            NEW_VERSION=`./node_modules/.bin/semver $PREVIOUS_VERSION --increment prerelease --preid beta`
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NEW_VERSION: ${{ steps.determine_next_version.outputs.NEW_VERSION }}
        run: |
          cd build
          npm version $NEW_VERSION --commit-hooks false --git-tag-version false
          head package.json
          cd ..

          git tag $NEW_VERSION
          git push origin $NEW_VERSION
          npm publish ./build


