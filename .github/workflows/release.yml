name: Release
on:
  workflow_dispatch:
jobs:
  Release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Golang
        run: ./bin/install-go.sh
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: 'https://registry.npmjs.org'
      - name: Check
        run: yarn install && yarn test
      - name: Run node
        run: yarn install && yarn start
      - name: Run go
        run: yarn start:go
      - name: release
        id: release
        run: |
          git config --global user.name 'goatlang'
          git config --global user.email 'goatlang@users.noreply.github.com'

          echo "before"
          cat package.json

          new_version=`./bin/gotagger`
          echo "new_version: ${new_version}";

          npm version $new_version --commit-hooks false --git-tag-version false
          echo "after"
          cat package.json

          yarn changelog
          # git add CHANGELOG.md

          npm version 0.0.0 --commit-hooks false --git-tag-version false
          echo "back to 0.0.0"
          cat package.json

          # git commit --allow-empty -m "release: $new_version"

          branch_name="release-${new_version}"
          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_OUTPUT

          cat $GITHUB_OUTPUT

          # git checkout -b $branch_name
          # git push origin $branch_name

      - name: Variables
        env:
          NEW_VERSION: ${{ steps.release.outputs.NEW_VERSION }}
        run: |
          echo "start: $NEW_VERSION"
          echo "one: ${new_version}";
          echo "two: ${NEW_VERSION}"
          echo "three: ${{ steps.release.outputs.new_version }}"
          echo "four: ${{ steps.release.outputs.NEW_VERSION }}"
          echo "end"
      - name: PR
        env:
          NEW_VERSION: ${{ steps.release.outputs.NEW_VERSION }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: >-
            release: ${{ steps.release.outputs.NEW_VERSION }}
          title: >-
            release: ${{ steps.release.outputs.NEW_VERSION }}
          body: |
            - item 0
            - item 1
            - ${{ steps.release.outputs.NEW_VERSION }}

            And a footer
          # branch: ${{ steps.release.outputs.branch_name }}

